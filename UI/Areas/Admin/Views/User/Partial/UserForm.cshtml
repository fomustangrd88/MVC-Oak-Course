
@model DTO.UserDTO

<div class="box-body">
    <div class="form-group">
        <label>User Name</label>
        @Html.TextBoxFor(x => x.Username, new { @class = "form-control", @placeholder = "User Name" })
        @Html.ValidationMessageFor(x => x.Username)
    </div>
    <div class="form-group">
        <label>Password</label>
        @Html.TextBoxFor(x => x.Password, new { @class = "form-control", @placeholder = "Password" })
        @Html.ValidationMessageFor(x => x.Password)
    </div>
    @if (DTO.UserStatic.isAdmin)
    {
    <div class="form-check">
        <input type="checkbox" class="form-check-input" name="isAdmin" checked="@Model.isAdmin" value="true">
        <label class="form-check-label" for="isAdmin">is Admin?</label><br/><br/>
    </div>
    }
    <div class="form-group">
        @Html.LabelFor(x => x.UserImage)<br />
        <input type="file" name="UserImage" accept="image/gif,image/jpeg,image/jpg,image/png" onchange="$('#UserImage')[0].src = window.URL.createObjectURL(this.files[0])" />
        <br /><br />
        @if (Model != null && Model.ImagePath != null)
        {
            <br />
            <img src="~/Areas/Admin/Content/userimage/@Model.ImagePath" width="300" height="200" id="UserImage" />
        }
        else
        {
            <img src="~/Areas/Admin/Content/tempimage/placeholder.gif" width="300" height="200" id="UserImage" />
        }
    </div>
    <div class="form-group">
        <label>Name</label>
        @Html.TextBoxFor(x => x.Surname, new { @class = "form-control", @placeholder = "Name" })
        @Html.ValidationMessageFor(x => x.Surname)
    </div>
    <div class="form-group">
        <label>Email</label>
        @Html.TextBoxFor(x => x.Email, new { @class = "form-control", @placeholder = "Email" })
        @Html.ValidationMessageFor(x => x.Email)
    </div>
    <div class="card-footer">
        <button type="submit" class="btn btn-primary">Save</button>
    </div>
    <input type="number" name="HiddenUserID" value="@Model.ID" hidden />
</div>
