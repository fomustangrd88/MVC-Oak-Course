
@model DTO.AddressDTO

<div class="box-body">
    <div class="form-group">
        <label>Address</label>
        @Html.TextBoxFor(x => x.Address, new { @class = "form-control", @placeholder = "Address" })
        @Html.ValidationMessageFor(x => x.Address)
    </div>
    <div class="form-group">
        <label>Email</label>
        @Html.TextBoxFor(x => x.Email, new { @class = "form-control", @placeholder = "Email" })
        @Html.ValidationMessageFor(x => x.Email)
    </div>
    <div class="form-group">
        <label>Phone</label>
        @Html.TextBoxFor(x => x.Phone, new { @class = "form-control", @placeholder = "Phone" })
        @Html.ValidationMessageFor(x => x.Phone)
    </div>
    <div class="form-group">
        <label>Phone 2</label>
        @Html.TextBoxFor(x => x.Phone2, new { @class = "form-control", @placeholder = "Phone 2" })
    </div>
    <div class="form-group">
        <label>Fax</label>
        @Html.TextBoxFor(x => x.Fax, new { @class = "form-control", @placeholder = "Fax" })
        @Html.ValidationMessageFor(x => x.Fax)
    </div>
    <div class="form-group">
        <label>Big Map Path</label>
        @Html.TextAreaFor(x => x.MapPathLarge, new { @class = "form-control", @rows = "5", @placeholder = "Big Map Path" })
        @Html.ValidationMessageFor(x => x.MapPathLarge)
    </div>
    <div class="form-group">
        <label>Small Map Path</label>
        @Html.TextAreaFor(x => x.MapPathSmall, new { @class = "form-control", @rows = "5", @placeholder = "Small Map Path" })
        @Html.ValidationMessageFor(x => x.MapPathSmall)
    </div>
    <div class="card-footer">
        <button type="submit" class="btn btn-primary">Save</button>
    </div>
    <input type="number" name="HiddenAdsID" value="@Model.ID" hidden />
</div>
